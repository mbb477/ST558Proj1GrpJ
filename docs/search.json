[
  {
    "objectID": "ST558Proj1.html",
    "href": "ST558Proj1.html",
    "title": "ST558 Project 1",
    "section": "",
    "text": "One of the goals of this project is to create a function that can take in a URL and process and parse similar types of data sets in a specific way. The data sets we are working with are files that contain Census Bureau information.\n\n\nWe will start with the EDU01a data set and use it to outline the steps that will be necessary to create our wrapper function. To begin, the appropriate packages are loaded and the data imported using read_csv. This function is appropriate for csv files. The data already contains column names, which is the default for this function, so it is not necessary to specify an argument regarding column names.\n\nlibrary(tidyverse)\nlibrary(readr)\ncensus_1a_original &lt;- \nread_csv(\"https://www4.stat.ncsu.edu/~online/datasets/EDU01a.csv\")\n\nRows: 3198 Columns: 42\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (22): Area_name, STCOU, EDU010187N1, EDU010187N2, EDU010188N1, EDU010188...\ndbl (20): EDU010187F, EDU010187D, EDU010188F, EDU010188D, EDU010189F, EDU010...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nhead(census_1a_original)\n\n# A tibble: 6 × 42\n  Area_name     STCOU EDU010187F EDU010187D EDU010187N1 EDU010187N2 EDU010188F\n  &lt;chr&gt;         &lt;chr&gt;      &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;            &lt;dbl&gt;\n1 UNITED STATES 00000          0   40024299 0000        0000                 0\n2 ALABAMA       01000          0     733735 0000        0000                 0\n3 Autauga, AL   01001          0       6829 0000        0000                 0\n4 Baldwin, AL   01003          0      16417 0000        0000                 0\n5 Barbour, AL   01005          0       5071 0000        0000                 0\n6 Bibb, AL      01007          0       3557 0000        0000                 0\n# ℹ 35 more variables: EDU010188D &lt;dbl&gt;, EDU010188N1 &lt;chr&gt;, EDU010188N2 &lt;chr&gt;,\n#   EDU010189F &lt;dbl&gt;, EDU010189D &lt;dbl&gt;, EDU010189N1 &lt;chr&gt;, EDU010189N2 &lt;chr&gt;,\n#   EDU010190F &lt;dbl&gt;, EDU010190D &lt;dbl&gt;, EDU010190N1 &lt;chr&gt;, EDU010190N2 &lt;chr&gt;,\n#   EDU010191F &lt;dbl&gt;, EDU010191D &lt;dbl&gt;, EDU010191N1 &lt;chr&gt;, EDU010191N2 &lt;chr&gt;,\n#   EDU010192F &lt;dbl&gt;, EDU010192D &lt;dbl&gt;, EDU010192N1 &lt;chr&gt;, EDU010192N2 &lt;chr&gt;,\n#   EDU010193F &lt;dbl&gt;, EDU010193D &lt;dbl&gt;, EDU010193N1 &lt;chr&gt;, EDU010193N2 &lt;chr&gt;,\n#   EDU010194F &lt;dbl&gt;, EDU010194D &lt;dbl&gt;, EDU010194N1 &lt;chr&gt;, EDU010194N2 &lt;chr&gt;, …\n\n\n\n\n\nThe next step is to select the columns we are interested in, followed by pivoting the data into a long format, which is more appropriate for data analysis. In this case, we are selecting Area_name, which is also being renamed to area_name, STCOU, which is a state (first 2 digits) and county (last 3 digits) code and all columns that end with a “D”. These columns ending in “D” correspond to an id that identifies the type of survey and value associated with it and the 2 digit year.\n\ncensus_1a_condensed &lt;- census_1a_original |&gt;\n  select(Area_name, STCOU, ends_with(\"D\")) |&gt;\n  rename(area_name = Area_name) |&gt;\n  pivot_longer(cols = 3:12, \n               names_to = \"item_id\", \n               values_to = \"enrollment\") |&gt; \n  filter(area_name != \"District of Columbia\")\nhead(census_1a_condensed) \n\n# A tibble: 6 × 4\n  area_name     STCOU item_id    enrollment\n  &lt;chr&gt;         &lt;chr&gt; &lt;chr&gt;           &lt;dbl&gt;\n1 UNITED STATES 00000 EDU010187D   40024299\n2 UNITED STATES 00000 EDU010188D   39967624\n3 UNITED STATES 00000 EDU010189D   40317775\n4 UNITED STATES 00000 EDU010190D   40737600\n5 UNITED STATES 00000 EDU010191D   41385442\n6 UNITED STATES 00000 EDU010192D   42088151\n\nview(census_1a_condensed)\n\n\n\n\nNext, we want to pull out the year from the item_id and convert it to an appropriate, 4-digit form placed in it’s own column. We also want to isolate and put in it’s own column the portion of the item_id that corresponds to the survey code and value associated with it. We can use the mutate function to add these columns. The substr() function allows you to extract a string based on position. For the year, for example, the numbers corresponding to the year are in the 8th and 9th position of the 10 character string. Then we add 1900 to the extracted 2 digit number to obtain the 4 digit year. The survey code is extracted in a similar manner.\n\ncensus_1a_add &lt;- census_1a_condensed |&gt;\n  mutate(year = (as.numeric(substr(item_id, 8, 9)) + 1900),\n         survey_code = substr(item_id, 1, 7))\ncensus_1a_add\n\n# A tibble: 31,970 × 6\n   area_name     STCOU item_id    enrollment  year survey_code\n   &lt;chr&gt;         &lt;chr&gt; &lt;chr&gt;           &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;      \n 1 UNITED STATES 00000 EDU010187D   40024299  1987 EDU0101    \n 2 UNITED STATES 00000 EDU010188D   39967624  1988 EDU0101    \n 3 UNITED STATES 00000 EDU010189D   40317775  1989 EDU0101    \n 4 UNITED STATES 00000 EDU010190D   40737600  1990 EDU0101    \n 5 UNITED STATES 00000 EDU010191D   41385442  1991 EDU0101    \n 6 UNITED STATES 00000 EDU010192D   42088151  1992 EDU0101    \n 7 UNITED STATES 00000 EDU010193D   42724710  1993 EDU0101    \n 8 UNITED STATES 00000 EDU010194D   43369917  1994 EDU0101    \n 9 UNITED STATES 00000 EDU010195D   43993459  1995 EDU0101    \n10 UNITED STATES 00000 EDU010196D   44715737  1996 EDU0101    \n# ℹ 31,960 more rows\n\n\n\n\n\nIn this next step, we separate the observations into two data sets based on the presence or absence of a character string pattern in the area_name variable. Specifically, we use the grepl() function to identify observations within the area_name column that contain the pattern of a comma followed by a space and then two consecutive characters, which is indicative of county level data. First, we use the filter() function to select only those rows that contain the pattern and store these in the county_data tibble. then we use filter() to select only those rows that do NOT contain the pattern, and store those in the noncounty_data tibble. From here, we also assign a “county” or “non-county” class to each new data set.\n\ncounty_data &lt;- census_1a_add |&gt;\n  filter(grepl(pattern = \", \\\\w\\\\w\", area_name))\n\nnoncounty_data &lt;- census_1a_add |&gt;\n  filter(!grepl(pattern = \", \\\\w\\\\w\", area_name))\n\nclass(county_data) &lt;- c(\"county\", class(county_data))\nclass(noncounty_data) &lt;- c(\"state\", class(noncounty_data))\n\nhead(county_data)\n\n# A tibble: 6 × 6\n  area_name   STCOU item_id    enrollment  year survey_code\n  &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;           &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;      \n1 Autauga, AL 01001 EDU010187D       6829  1987 EDU0101    \n2 Autauga, AL 01001 EDU010188D       6900  1988 EDU0101    \n3 Autauga, AL 01001 EDU010189D       6920  1989 EDU0101    \n4 Autauga, AL 01001 EDU010190D       6847  1990 EDU0101    \n5 Autauga, AL 01001 EDU010191D       7008  1991 EDU0101    \n6 Autauga, AL 01001 EDU010192D       7137  1992 EDU0101    \n\nhead(noncounty_data)\n\n# A tibble: 6 × 6\n  area_name     STCOU item_id    enrollment  year survey_code\n  &lt;chr&gt;         &lt;chr&gt; &lt;chr&gt;           &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;      \n1 UNITED STATES 00000 EDU010187D   40024299  1987 EDU0101    \n2 UNITED STATES 00000 EDU010188D   39967624  1988 EDU0101    \n3 UNITED STATES 00000 EDU010189D   40317775  1989 EDU0101    \n4 UNITED STATES 00000 EDU010190D   40737600  1990 EDU0101    \n5 UNITED STATES 00000 EDU010191D   41385442  1991 EDU0101    \n6 UNITED STATES 00000 EDU010192D   42088151  1992 EDU0101    \n\n\n\n\n\nWithin the county data set, we now return to using substr() to extract the last two characters of the area_name variable, which indicates the two-letter abbreviation for which state in which the county is located. We store this in a new “state” variable.\n\ncounty_data &lt;- county_data |&gt;\n  mutate(state = substr(area_name, nchar(area_name)-1,\n                        nchar(area_name)))\ncounty_data\n\n# A tibble: 31,450 × 7\n   area_name   STCOU item_id    enrollment  year survey_code state\n   &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;           &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;\n 1 Autauga, AL 01001 EDU010187D       6829  1987 EDU0101     AL   \n 2 Autauga, AL 01001 EDU010188D       6900  1988 EDU0101     AL   \n 3 Autauga, AL 01001 EDU010189D       6920  1989 EDU0101     AL   \n 4 Autauga, AL 01001 EDU010190D       6847  1990 EDU0101     AL   \n 5 Autauga, AL 01001 EDU010191D       7008  1991 EDU0101     AL   \n 6 Autauga, AL 01001 EDU010192D       7137  1992 EDU0101     AL   \n 7 Autauga, AL 01001 EDU010193D       7152  1993 EDU0101     AL   \n 8 Autauga, AL 01001 EDU010194D       7381  1994 EDU0101     AL   \n 9 Autauga, AL 01001 EDU010195D       7568  1995 EDU0101     AL   \n10 Autauga, AL 01001 EDU010196D       7834  1996 EDU0101     AL   \n# ℹ 31,440 more rows\n\n\n\n\n\nFor the non-county data set, we use a series of “ifelse” statements to indicate the set of states belonging to each U.S. division, creating a new “division” variable to store this information. When the area in question is not a state (e.g., UNITED STATES), this will return “ERROR”.\n\nnoncounty_data &lt;- noncounty_data |&gt;\n  mutate(division = ifelse(area_name %in% c(\n    \"CONNECTICUT\", \"MAINE\", \"MASSACHUSETTS\", \"NEW HAMPSHIRE\", \n    \"RHODE ISLAND\", \"VERMONT\"), \"New England\",\n    ifelse(area_name %in% c(\n      \"NEW JERSEY\", \"NEW YORK\", \"PENNSYLVANIA\"), \n      \"Middle Atlantic\", \n      ifelse(area_name %in% c(\n        \"ILLINOIS\", \"INDIANA\", \"MICHIGAN\", \"OHIO\", \"WISCONSIN\"),\n        \"East North Central\", \n        ifelse(area_name %in% c(\n          \"IOWA\", \"KANSAS\", \"MINNESOTA\", \"MISSOURI\", \"NEBRASKA\",\n          \"NORTH DAKOTA\", \"SOUTH DAKOTA\"), \"West North Central\",\n          ifelse(area_name %in% c(\n            \"DELAWARE\", \"FLORIDA\", \"GEORGIA\", \"MARYLAND\", \n            \"NORTH CAROLINA\", \"SOUTH CAROLINA\", \"VIRGINIA\",\n            \"DISTRICT OF COLUMBIA\", \"WEST VIRGINIA\"), \n            \"South Atlantic\",\n            ifelse(area_name %in% c(\n              \"ALABAMA\", \"KENTUCKY\", \"MISSISSIPPI\", \"TENNESSEE\"),\n              \"East South Central\",\n              ifelse(area_name %in% c(\n                \"ARKANSAS\", \"LOUISIANA\", \"OKLAHOMA\", \"TEXAS\"),\n                \"West South Central\",\n                ifelse(area_name %in% c(\n                  \"ARIZONA\", \"COLORADO\", \"IDAHO\", \"MONTANA\",\n                  \"NEVADA\", \"NEW MEXICO\", \"UTAH\", \"WYOMING\"),\n                  \"Mountain\",\n                  ifelse(area_name %in% c(\n                    \"ALASKA\", \"CALIFORNIA\", \"HAWAII\", \"OREGON\",\n                    \"WASHINGTON\"), \"Pacific\", \n                  \"ERROR\"))))))))))\nnoncounty_data\n\n# A tibble: 520 × 7\n   area_name     STCOU item_id    enrollment  year survey_code division\n   &lt;chr&gt;         &lt;chr&gt; &lt;chr&gt;           &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;   \n 1 UNITED STATES 00000 EDU010187D   40024299  1987 EDU0101     ERROR   \n 2 UNITED STATES 00000 EDU010188D   39967624  1988 EDU0101     ERROR   \n 3 UNITED STATES 00000 EDU010189D   40317775  1989 EDU0101     ERROR   \n 4 UNITED STATES 00000 EDU010190D   40737600  1990 EDU0101     ERROR   \n 5 UNITED STATES 00000 EDU010191D   41385442  1991 EDU0101     ERROR   \n 6 UNITED STATES 00000 EDU010192D   42088151  1992 EDU0101     ERROR   \n 7 UNITED STATES 00000 EDU010193D   42724710  1993 EDU0101     ERROR   \n 8 UNITED STATES 00000 EDU010194D   43369917  1994 EDU0101     ERROR   \n 9 UNITED STATES 00000 EDU010195D   43993459  1995 EDU0101     ERROR   \n10 UNITED STATES 00000 EDU010196D   44715737  1996 EDU0101     ERROR   \n# ℹ 510 more rows"
  },
  {
    "objectID": "ST558Proj1.html#state-plotting-function",
    "href": "ST558Proj1.html#state-plotting-function",
    "title": "ST558 Project 1",
    "section": "State Plotting Function",
    "text": "State Plotting Function\nFor the state plotting function, we want to create a function that will take in our combined census data sets and our default variable as arguments and outputs a plot of year versus the mean of of the default variable for each division. To accomplish this, we first need to do some manipulation with our tibble. First, we isolate the proper tibble from the list using [[]]. Since the United States is not a division and has “ERROR” in the division column, we need to filter to remove those rows. Finally we can group by year and division to so that the appropriate means are calculated. To calculate a mean for each year and division combination, we use summarize and reference our default variable name for the mean function.\nNow that our data is in the proper form and summary statistics obtained, we can create our line plot. We use ggplot to create a plot instance. The plot instance needs two arguments, one specifying our data and an aesthetic (aes) mapping argument. The aes mapping defines the x and y axis variables, as well as mapping for division so the plot assigns a different color and line to each division. Next we add layers. Since we want a line connecting years for each division, we use geom_line. We chose to leave the defaults in place so no arguments are specified. A labs layer was then added to modify some labels. The x-axis and legend labels are capitalized and the title and axis label specified in a way that will allow the names to change dynamically according to the default variable name used when calling the function.\n\n#view(combined_census_lists_EDU[[2]])\nresult &lt;- combined_census_lists_EDU[[2]] |&gt;\n  filter(area_name != \"UNITED STATES\") |&gt; \n  group_by(division, year)\nresult\n\n# A tibble: 1,020 × 7\n# Groups:   division, year [180]\n   area_name STCOU item_id    enrollment  year survey_code division          \n   &lt;chr&gt;     &lt;chr&gt; &lt;chr&gt;           &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;             \n 1 ALABAMA   01000 EDU010187D     733735  1987 EDU0101     East South Central\n 2 ALABAMA   01000 EDU010188D     728234  1988 EDU0101     East South Central\n 3 ALABAMA   01000 EDU010189D     730048  1989 EDU0101     East South Central\n 4 ALABAMA   01000 EDU010190D     728252  1990 EDU0101     East South Central\n 5 ALABAMA   01000 EDU010191D     725541  1991 EDU0101     East South Central\n 6 ALABAMA   01000 EDU010192D     726150  1992 EDU0101     East South Central\n 7 ALABAMA   01000 EDU010193D     728014  1993 EDU0101     East South Central\n 8 ALABAMA   01000 EDU010194D     730509  1994 EDU0101     East South Central\n 9 ALABAMA   01000 EDU010195D     727989  1995 EDU0101     East South Central\n10 ALABAMA   01000 EDU010196D     736825  1996 EDU0101     East South Central\n# ℹ 1,010 more rows\n\n\ncheck summarize and groupings\n\nresult &lt;- combined_census_lists_EDU[[2]] |&gt;\n  filter(area_name != \"UNITED STATES\") |&gt; \n  group_by(division, year) |&gt;\n  summarize(mean_enrollment = mean(enrollment))\n\n`summarise()` has grouped output by 'division'. You can override using the\n`.groups` argument.\n\nresult\n\n# A tibble: 180 × 3\n# Groups:   division [9]\n   division            year mean_enrollment\n   &lt;chr&gt;              &lt;dbl&gt;           &lt;dbl&gt;\n 1 East North Central  1987        1395868.\n 2 East North Central  1988        1400830.\n 3 East North Central  1989        1352998.\n 4 East North Central  1990        1384188.\n 5 East North Central  1991        1393162.\n 6 East North Central  1992        1414759.\n 7 East North Central  1993        1416112.\n 8 East North Central  1994        1425489 \n 9 East North Central  1995        1438632 \n10 East North Central  1996        1454695.\n# ℹ 170 more rows\n\n\nincorporate var_name in the plot function,\n\nstate.plot &lt;- function(df, var_name = \"enrollment\") {\n  result &lt;- df[[2]] |&gt;\n    filter(area_name != \"UNITED STATES\") |&gt; \n    group_by(division, year) |&gt; \n    summarize(mean(get(var_name)))\n             return(result)\n}\nstate.plot(combined_census_lists_EDU)\n\n`summarise()` has grouped output by 'division'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 180 × 3\n# Groups:   division [9]\n   division            year `mean(get(var_name))`\n   &lt;chr&gt;              &lt;dbl&gt;                 &lt;dbl&gt;\n 1 East North Central  1987              1395868.\n 2 East North Central  1988              1400830.\n 3 East North Central  1989              1352998.\n 4 East North Central  1990              1384188.\n 5 East North Central  1991              1393162.\n 6 East North Central  1992              1414759.\n 7 East North Central  1993              1416112.\n 8 East North Central  1994              1425489 \n 9 East North Central  1995              1438632 \n10 East North Central  1996              1454695.\n# ℹ 170 more rows\n\n\nadd plot instance\n\nstate.plot &lt;- function(df, var_name = \"enrollment\") {\n  result &lt;- df[[2]] |&gt;\n    filter(area_name != \"UNITED STATES\") |&gt; \n    group_by(division, year) |&gt; \n    summarize(mean_values = mean(get(var_name)))\n  g &lt;- ggplot(result, aes(x = year, y = mean_values))\n  return(g)\n}\n\nstate.plot(combined_census_lists_EDU)\n\n`summarise()` has grouped output by 'division'. You can override using the\n`.groups` argument.\n\n\n\n\n\n\n\n\n\nadd layers\nneed to add “mean” so that y-axis is “mean enrollment”, maybe capitalize labels\n\nstate.plot &lt;- function(df, var_name = \"enrollment\") {\n  result &lt;- df[[2]] |&gt;\n    filter(area_name != \"UNITED STATES\") |&gt; \n    group_by(division, year) |&gt; \n    summarize(mean_values = mean(get(var_name)))\n  g &lt;- ggplot(result, aes(x = year, y = mean_values, color = division)) +\n    geom_line() +\n    labs (x = \"Year\", y = paste(\"Mean\", var_name), color = \"Division\", \n          title = paste(\"Mean\", var_name, \"per year by division\"))\n  return(g)\n}\n\nstate.plot(combined_census_lists_EDU)\n\n\nInvestigation of possible outlier in Middle Atlantic\nThere is a decrease in enrollment in 1997 for the Middle Atlantic, so there may be an outlier. The data was filtered for 1997 and Middle Atlantic. We can see that the public education enrollment for New Jersey is recorded as zero.\n\noutlier_mid_atlantic &lt;- combined_census_lists_EDU[[2]] |&gt;\n  filter(year == 1997, division == \"Middle Atlantic\")\noutlier_mid_atlantic\n\n# A tibble: 3 × 7\n  area_name    STCOU item_id    enrollment  year survey_code division       \n  &lt;chr&gt;        &lt;chr&gt; &lt;chr&gt;           &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;          \n1 NEW JERSEY   34000 EDU010197D          0  1997 EDU0101     Middle Atlantic\n2 NEW YORK     36000 EDU010197D    2843415  1997 EDU0101     Middle Atlantic\n3 PENNSYLVANIA 42000 EDU010197D    1804256  1997 EDU0101     Middle Atlantic\n\n\nEDU01097 corresponds to public education enrollment for fall 1996-1997. An online search found a document from the New Jersey Department of Education indicating that enrollment for the 1996-1997 school year was 1,227,832, so we will replace the zero with this number and rerun the plot function. (https://nces.ed.gov/pubs2000/stateprofiles/pdf/new_jersey.pdf). In the new plot function, the incorrect value will be replaced using ifelse() in a mutate statement.\n\nstate.plot &lt;- function(df, var_name = \"enrollment\") {\n  result &lt;- df[[2]] |&gt;\n    filter(area_name != \"UNITED STATES\") |&gt; \n    mutate(enrollment = ifelse(area_name == \"NEW JERSEY\" & year == 1997 & enrollment == 0, 1227832, enrollment)) |&gt;\n    group_by(division, year) |&gt; \n    summarize(mean_values = mean(get(var_name)), .groups = \"drop\")\n  g &lt;- ggplot(result, aes(x = year, y = mean_values, color = division)) +\n    geom_line() +\n    labs (x = \"Year\", y = paste(\"Mean\", var_name), color = \"Division\", \n          title = paste(\"Mean\", var_name, \"per year by division\"))\n  return(g)\n}\n\nstate.plot(combined_census_lists_EDU)"
  },
  {
    "objectID": "ST558Proj1.html#county-plotting-function",
    "href": "ST558Proj1.html#county-plotting-function",
    "title": "ST558 Project 1",
    "section": "County Plotting Function",
    "text": "County Plotting Function"
  },
  {
    "objectID": "ST558Proj1.html#edu-data-sets",
    "href": "ST558Proj1.html#edu-data-sets",
    "title": "ST558 Project 1",
    "section": "EDU Data Sets",
    "text": "EDU Data Sets\n\nData Processing Function Applied to EDU Data Sets\n\nEDU1a\n\ncensus_df_list_EDU01a &lt;- \n  data_processing_wrapper(\"https://www4.stat.ncsu.edu/~online/datasets/EDU01a.csv\")\n\nRows: 3198 Columns: 42\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (22): Area_name, STCOU, EDU010187N1, EDU010187N2, EDU010188N1, EDU010188...\ndbl (20): EDU010187F, EDU010187D, EDU010188F, EDU010188D, EDU010189F, EDU010...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncensus_df_list_EDU01a\n\n$county_data\n# A tibble: 31,450 × 7\n   area_name   STCOU item_id    enrollment  year survey_code state\n   &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;           &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;\n 1 Autauga, AL 01001 EDU010187D       6829  1987 EDU0101     AL   \n 2 Autauga, AL 01001 EDU010188D       6900  1988 EDU0101     AL   \n 3 Autauga, AL 01001 EDU010189D       6920  1989 EDU0101     AL   \n 4 Autauga, AL 01001 EDU010190D       6847  1990 EDU0101     AL   \n 5 Autauga, AL 01001 EDU010191D       7008  1991 EDU0101     AL   \n 6 Autauga, AL 01001 EDU010192D       7137  1992 EDU0101     AL   \n 7 Autauga, AL 01001 EDU010193D       7152  1993 EDU0101     AL   \n 8 Autauga, AL 01001 EDU010194D       7381  1994 EDU0101     AL   \n 9 Autauga, AL 01001 EDU010195D       7568  1995 EDU0101     AL   \n10 Autauga, AL 01001 EDU010196D       7834  1996 EDU0101     AL   \n# ℹ 31,440 more rows\n\n$noncounty_data\n# A tibble: 520 × 7\n   area_name     STCOU item_id    enrollment  year survey_code division\n   &lt;chr&gt;         &lt;chr&gt; &lt;chr&gt;           &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;   \n 1 UNITED STATES 00000 EDU010187D   40024299  1987 EDU0101     ERROR   \n 2 UNITED STATES 00000 EDU010188D   39967624  1988 EDU0101     ERROR   \n 3 UNITED STATES 00000 EDU010189D   40317775  1989 EDU0101     ERROR   \n 4 UNITED STATES 00000 EDU010190D   40737600  1990 EDU0101     ERROR   \n 5 UNITED STATES 00000 EDU010191D   41385442  1991 EDU0101     ERROR   \n 6 UNITED STATES 00000 EDU010192D   42088151  1992 EDU0101     ERROR   \n 7 UNITED STATES 00000 EDU010193D   42724710  1993 EDU0101     ERROR   \n 8 UNITED STATES 00000 EDU010194D   43369917  1994 EDU0101     ERROR   \n 9 UNITED STATES 00000 EDU010195D   43993459  1995 EDU0101     ERROR   \n10 UNITED STATES 00000 EDU010196D   44715737  1996 EDU0101     ERROR   \n# ℹ 510 more rows\n\n\n\n\nEDU1b\n\ncensus_df_list_EDU01b &lt;- \n  data_processing_wrapper(\"https://www4.stat.ncsu.edu/~online/datasets/EDU01b.csv\")\n\nRows: 3198 Columns: 42\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (22): Area_name, STCOU, EDU010197N1, EDU010197N2, EDU010198N1, EDU010198...\ndbl (20): EDU010197F, EDU010197D, EDU010198F, EDU010198D, EDU010199F, EDU010...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncensus_df_list_EDU01b\n\n$county_data\n# A tibble: 31,450 × 7\n   area_name   STCOU item_id    enrollment  year survey_code state\n   &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;           &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;\n 1 Autauga, AL 01001 EDU010197D       8099  1997 EDU0101     AL   \n 2 Autauga, AL 01001 EDU010198D       8211  1998 EDU0101     AL   \n 3 Autauga, AL 01001 EDU010199D       8489  1999 EDU0101     AL   \n 4 Autauga, AL 01001 EDU010200D       8912  2000 EDU0102     AL   \n 5 Autauga, AL 01001 EDU010201D       8626  2001 EDU0102     AL   \n 6 Autauga, AL 01001 EDU010202D       8762  2002 EDU0102     AL   \n 7 Autauga, AL 01001 EDU015203D       9105  2003 EDU0152     AL   \n 8 Autauga, AL 01001 EDU015204D       9200  2004 EDU0152     AL   \n 9 Autauga, AL 01001 EDU015205D       9559  2005 EDU0152     AL   \n10 Autauga, AL 01001 EDU015206D       9652  2006 EDU0152     AL   \n# ℹ 31,440 more rows\n\n$noncounty_data\n# A tibble: 520 × 7\n   area_name     STCOU item_id    enrollment  year survey_code division\n   &lt;chr&gt;         &lt;chr&gt; &lt;chr&gt;           &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;   \n 1 UNITED STATES 00000 EDU010197D   44534459  1997 EDU0101     ERROR   \n 2 UNITED STATES 00000 EDU010198D   46245814  1998 EDU0101     ERROR   \n 3 UNITED STATES 00000 EDU010199D   46368903  1999 EDU0101     ERROR   \n 4 UNITED STATES 00000 EDU010200D   46818690  2000 EDU0102     ERROR   \n 5 UNITED STATES 00000 EDU010201D   47127066  2001 EDU0102     ERROR   \n 6 UNITED STATES 00000 EDU010202D   47606570  2002 EDU0102     ERROR   \n 7 UNITED STATES 00000 EDU015203D   48506317  2003 EDU0152     ERROR   \n 8 UNITED STATES 00000 EDU015204D   48693287  2004 EDU0152     ERROR   \n 9 UNITED STATES 00000 EDU015205D   48978555  2005 EDU0152     ERROR   \n10 UNITED STATES 00000 EDU015206D   49140702  2006 EDU0152     ERROR   \n# ℹ 510 more rows\n\n\n\n\n\nData Combining Function Applied to EDU Data Sets\n\ncombined_census_lists_EDU &lt;- \n  combine_census_lists(census_df_list_EDU01a, census_df_list_EDU01b)\ncombined_census_lists_EDU\n\n$county_data\n# A tibble: 62,900 × 7\n   area_name   STCOU item_id    enrollment  year survey_code state\n   &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;           &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;\n 1 Autauga, AL 01001 EDU010187D       6829  1987 EDU0101     AL   \n 2 Autauga, AL 01001 EDU010188D       6900  1988 EDU0101     AL   \n 3 Autauga, AL 01001 EDU010189D       6920  1989 EDU0101     AL   \n 4 Autauga, AL 01001 EDU010190D       6847  1990 EDU0101     AL   \n 5 Autauga, AL 01001 EDU010191D       7008  1991 EDU0101     AL   \n 6 Autauga, AL 01001 EDU010192D       7137  1992 EDU0101     AL   \n 7 Autauga, AL 01001 EDU010193D       7152  1993 EDU0101     AL   \n 8 Autauga, AL 01001 EDU010194D       7381  1994 EDU0101     AL   \n 9 Autauga, AL 01001 EDU010195D       7568  1995 EDU0101     AL   \n10 Autauga, AL 01001 EDU010196D       7834  1996 EDU0101     AL   \n# ℹ 62,890 more rows\n\n$noncounty_data\n# A tibble: 1,040 × 7\n   area_name     STCOU item_id    enrollment  year survey_code division\n   &lt;chr&gt;         &lt;chr&gt; &lt;chr&gt;           &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;   \n 1 UNITED STATES 00000 EDU010187D   40024299  1987 EDU0101     ERROR   \n 2 UNITED STATES 00000 EDU010188D   39967624  1988 EDU0101     ERROR   \n 3 UNITED STATES 00000 EDU010189D   40317775  1989 EDU0101     ERROR   \n 4 UNITED STATES 00000 EDU010190D   40737600  1990 EDU0101     ERROR   \n 5 UNITED STATES 00000 EDU010191D   41385442  1991 EDU0101     ERROR   \n 6 UNITED STATES 00000 EDU010192D   42088151  1992 EDU0101     ERROR   \n 7 UNITED STATES 00000 EDU010193D   42724710  1993 EDU0101     ERROR   \n 8 UNITED STATES 00000 EDU010194D   43369917  1994 EDU0101     ERROR   \n 9 UNITED STATES 00000 EDU010195D   43993459  1995 EDU0101     ERROR   \n10 UNITED STATES 00000 EDU010196D   44715737  1996 EDU0101     ERROR   \n# ℹ 1,030 more rows\n\n\n\n\nState Plot Function Applied to EDU Data Sets\n\nstate.plot &lt;- function(df, var_name = \"enrollment\") {\n  result &lt;- df[[2]] |&gt;\n    filter(area_name != \"UNITED STATES\") |&gt; \n    mutate(enrollment = ifelse(area_name == \"NEW JERSEY\" & year == 1997 & enrollment == 0, 1227832, enrollment)) |&gt;\n    group_by(division, year) |&gt; \n    summarize(mean_values = mean(get(var_name)), .groups = \"drop\")\n  g &lt;- ggplot(result, aes(x = year, y = mean_values, color = division)) +\n    geom_line() +\n    labs (x = \"Year\", y = paste(\"Mean\", var_name), color = \"Division\", \n          title = paste(\"Mean\", var_name, \"per year by division\"))\n  return(g)\n}\n\nstate.plot(combined_census_lists_EDU)\n\n\n\n\n\n\n\n\n\n\nCounty Plot Function Applied to EDU Data Sets"
  },
  {
    "objectID": "ST558Proj1.html#pst-data-sets",
    "href": "ST558Proj1.html#pst-data-sets",
    "title": "ST558 Project 1",
    "section": "PST Data sets",
    "text": "PST Data sets\n\nData Processing Function Applied to PST Data Sets\n\nPST01a\n\n\nPST01b\n\n\nPST01c\n\n\nPST01d\n\n\n\nData Combining Function Applied to PST Data Sets\n\n\nState Plot Function Applied to PST Data Sets\n\n\nCounty Plot Function Applied to PST Data Sets"
  }
]