[
  {
    "objectID": "ST558Proj1.html",
    "href": "ST558Proj1.html",
    "title": "ST558 Project 1",
    "section": "",
    "text": "We begin with data set EDU01a, which contains measurements from different areas of the country taken across different years. In the steps below, we create code to organize the data into a usable form.\n\n\nBefore we, we load relevant packages and read in the csv file storing the data.\n\n\nWarning: package 'tidyverse' was built under R version 4.2.3\n\n\nWarning: package 'ggplot2' was built under R version 4.2.3\n\n\nWarning: package 'tibble' was built under R version 4.2.3\n\n\nWarning: package 'tidyr' was built under R version 4.2.3\n\n\nWarning: package 'readr' was built under R version 4.2.3\n\n\nWarning: package 'purrr' was built under R version 4.2.3\n\n\nWarning: package 'dplyr' was built under R version 4.2.3\n\n\nWarning: package 'stringr' was built under R version 4.2.3\n\n\nWarning: package 'forcats' was built under R version 4.2.3\n\n\nWarning: package 'lubridate' was built under R version 4.2.3\n\n\n\nlibrary(tidyverse)\nlibrary(readr)\ncensus_1a_original &lt;- read_csv(\"https://www4.stat.ncsu.edu/~online/datasets/EDU01a.csv\")\n\nRows: 3198 Columns: 42\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (22): Area_name, STCOU, EDU010187N1, EDU010187N2, EDU010188N1, EDU010188...\ndbl (20): EDU010187F, EDU010187D, EDU010188F, EDU010188D, EDU010189F, EDU010...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nhead(census_1a_original)\n\n# A tibble: 6 × 42\n  Area_name     STCOU EDU010187F EDU010187D EDU010187N1 EDU010187N2 EDU010188F\n  &lt;chr&gt;         &lt;chr&gt;      &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;            &lt;dbl&gt;\n1 UNITED STATES 00000          0   40024299 0000        0000                 0\n2 ALABAMA       01000          0     733735 0000        0000                 0\n3 Autauga, AL   01001          0       6829 0000        0000                 0\n4 Baldwin, AL   01003          0      16417 0000        0000                 0\n5 Barbour, AL   01005          0       5071 0000        0000                 0\n6 Bibb, AL      01007          0       3557 0000        0000                 0\n# ℹ 35 more variables: EDU010188D &lt;dbl&gt;, EDU010188N1 &lt;chr&gt;, EDU010188N2 &lt;chr&gt;,\n#   EDU010189F &lt;dbl&gt;, EDU010189D &lt;dbl&gt;, EDU010189N1 &lt;chr&gt;, EDU010189N2 &lt;chr&gt;,\n#   EDU010190F &lt;dbl&gt;, EDU010190D &lt;dbl&gt;, EDU010190N1 &lt;chr&gt;, EDU010190N2 &lt;chr&gt;,\n#   EDU010191F &lt;dbl&gt;, EDU010191D &lt;dbl&gt;, EDU010191N1 &lt;chr&gt;, EDU010191N2 &lt;chr&gt;,\n#   EDU010192F &lt;dbl&gt;, EDU010192D &lt;dbl&gt;, EDU010192N1 &lt;chr&gt;, EDU010192N2 &lt;chr&gt;,\n#   EDU010193F &lt;dbl&gt;, EDU010193D &lt;dbl&gt;, EDU010193N1 &lt;chr&gt;, EDU010193N2 &lt;chr&gt;,\n#   EDU010194F &lt;dbl&gt;, EDU010194D &lt;dbl&gt;, EDU010194N1 &lt;chr&gt;, EDU010194N2 &lt;chr&gt;, …\n\n#view(census_1a_original)\n\n\n\n\nIn the next two steps, we select a subset of columns we would like to work with, and then restructure the data from wide to long format, so that repeated measurements of the same area are contained in additional rows.\n\ncensus_1a_condensed &lt;- census_1a_original |&gt;\n  select(Area_name, STCOU, ends_with(\"D\")) |&gt;\n  rename(area_name = Area_name) |&gt;\n  pivot_longer(cols = 3:12, \n               names_to = \"item_id\", \n               values_to = \"measurement\")\nhead(census_1a_condensed) \n\n# A tibble: 6 × 4\n  area_name     STCOU item_id    measurement\n  &lt;chr&gt;         &lt;chr&gt; &lt;chr&gt;            &lt;dbl&gt;\n1 UNITED STATES 00000 EDU010187D    40024299\n2 UNITED STATES 00000 EDU010188D    39967624\n3 UNITED STATES 00000 EDU010189D    40317775\n4 UNITED STATES 00000 EDU010190D    40737600\n5 UNITED STATES 00000 EDU010191D    41385442\n6 UNITED STATES 00000 EDU010192D    42088151\n\n#view(census_1a_condensed)\n\n\n\n\nNext, we parse the character strings stored in the item_id column to extract the year of measurement and survey code, storing these as new variables.\n\ncensus_1a_add &lt;- census_1a_condensed |&gt;\n  mutate(year = (as.numeric(substr(item_id, 8, 9)) + 1900),\n         survey_code = substr(item_id, 1, 7))\ncensus_1a_add\n\n# A tibble: 31,980 × 6\n   area_name     STCOU item_id    measurement  year survey_code\n   &lt;chr&gt;         &lt;chr&gt; &lt;chr&gt;            &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;      \n 1 UNITED STATES 00000 EDU010187D    40024299  1987 EDU0101    \n 2 UNITED STATES 00000 EDU010188D    39967624  1988 EDU0101    \n 3 UNITED STATES 00000 EDU010189D    40317775  1989 EDU0101    \n 4 UNITED STATES 00000 EDU010190D    40737600  1990 EDU0101    \n 5 UNITED STATES 00000 EDU010191D    41385442  1991 EDU0101    \n 6 UNITED STATES 00000 EDU010192D    42088151  1992 EDU0101    \n 7 UNITED STATES 00000 EDU010193D    42724710  1993 EDU0101    \n 8 UNITED STATES 00000 EDU010194D    43369917  1994 EDU0101    \n 9 UNITED STATES 00000 EDU010195D    43993459  1995 EDU0101    \n10 UNITED STATES 00000 EDU010196D    44715737  1996 EDU0101    \n# ℹ 31,970 more rows\n\n\n\n\n\nIn this step, we separate the observations into two separate datasets based on the presence or absence of a character string pattern in the area_name variable, which is indicative of county level or non-county level data, respectively. From here, we also assign a “county” or “noncounty” class to each new dataset.\n\ncounty_data &lt;- census_1a_add |&gt;\n  filter(grepl(pattern = \", \\\\w\\\\w\", area_name))\n\nnoncounty_data &lt;- census_1a_add |&gt;\n  filter(!grepl(pattern = \", \\\\w\\\\w\", area_name))\n\nclass(county_data) &lt;- c(\"county\", class(county_data))\nclass(noncounty_data) &lt;- c(\"state\", class(noncounty_data))\n\nhead(county_data)\n\n# A tibble: 6 × 6\n  area_name   STCOU item_id    measurement  year survey_code\n  &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;            &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;      \n1 Autauga, AL 01001 EDU010187D        6829  1987 EDU0101    \n2 Autauga, AL 01001 EDU010188D        6900  1988 EDU0101    \n3 Autauga, AL 01001 EDU010189D        6920  1989 EDU0101    \n4 Autauga, AL 01001 EDU010190D        6847  1990 EDU0101    \n5 Autauga, AL 01001 EDU010191D        7008  1991 EDU0101    \n6 Autauga, AL 01001 EDU010192D        7137  1992 EDU0101    \n\nhead(noncounty_data)\n\n# A tibble: 6 × 6\n  area_name     STCOU item_id    measurement  year survey_code\n  &lt;chr&gt;         &lt;chr&gt; &lt;chr&gt;            &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;      \n1 UNITED STATES 00000 EDU010187D    40024299  1987 EDU0101    \n2 UNITED STATES 00000 EDU010188D    39967624  1988 EDU0101    \n3 UNITED STATES 00000 EDU010189D    40317775  1989 EDU0101    \n4 UNITED STATES 00000 EDU010190D    40737600  1990 EDU0101    \n5 UNITED STATES 00000 EDU010191D    41385442  1991 EDU0101    \n6 UNITED STATES 00000 EDU010192D    42088151  1992 EDU0101    \n\n\n\n\n\nWithin the county dataset, we now extract the last two characters of the area_name variable, indicating which state the county is located in, and we store this in a new “state” variable.\n\ncounty_data &lt;- county_data |&gt;\n  mutate(state = substr(area_name, nchar(area_name)-1,\n                        nchar(area_name)))\n\n\n\n\nFor the non-county dataset, we use a series of ifelse statements to indicate the set of states belonging to each U.S. division, creating a new “division” variable to store this information. When the area in question is not a state (e.g., UNITED STATES), this will return “ERROR”.\n\nnoncounty_data &lt;- noncounty_data |&gt;\n  mutate(division = ifelse(area_name %in% c(\n    \"CONNECTICUT\", \"MAINE\", \"MASSACHUSETTS\", \"NEW HAMPSHIRE\", \n    \"RHODE ISLAND\", \"VERMONT\"), \"New England\",\n    ifelse(area_name %in% c(\n      \"NEW JERSEY\", \"NEW YORK\", \"PENNSYLVANIA\"), \n      \"Middle Atlantic\", \n      ifelse(area_name %in% c(\n        \"ILLINOIS\", \"INDIANA\", \"MICHIGAN\", \"OHIO\", \"WISCONSIN\"),\n        \"East North Central\", \n        ifelse(area_name %in% c(\n          \"IOWA\", \"KANSAS\", \"MINNESOTA\", \"MISSOURI\", \"NEBRASKA\",\n          \"NORTH DAKOTA\", \"SOUTH DAKOTA\"), \"West North Central\",\n          ifelse(area_name %in% c(\n            \"DELAWARE\", \"FLORIDA\", \"GEORGIA\", \"MARYLAND\", \n            \"NORTH CAROLINA\", \"SOUTH CAROLINA\", \"VIRGINIA\",\n            \"DISTRICT OF COLUMBIA\", \"District of Columbia\", \n            \"WEST VIRGINIA\"), \"South Atlantic\",\n            ifelse(area_name %in% c(\n              \"ALABAMA\", \"KENTUCKY\", \"MISSISSIPPI\", \"TENNESSEE\"),\n              \"East South Central\",\n              ifelse(area_name %in% c(\n                \"ARKANSAS\", \"LOUISIANA\", \"OKLAHOMA\", \"TEXAS\"),\n                \"West South Central\",\n                ifelse(area_name %in% c(\n                  \"ARIZONA\", \"COLORADO\", \"IDAHO\", \"MONTANA\",\n                  \"NEVADA\", \"NEW MEXICO\", \"UTAH\", \"WYOMING\"),\n                  \"Mountain\",\n                  ifelse(area_name %in% c(\n                    \"ALASKA\", \"CALIFORNIA\", \"HAWAII\", \"OREGON\",\n                    \"WASHINGTON\"), \"Pacific\", \n                  \"ERROR\"))))))))))\nnoncounty_data\n\n# A tibble: 530 × 7\n   area_name     STCOU item_id    measurement  year survey_code division\n   &lt;chr&gt;         &lt;chr&gt; &lt;chr&gt;            &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;   \n 1 UNITED STATES 00000 EDU010187D    40024299  1987 EDU0101     ERROR   \n 2 UNITED STATES 00000 EDU010188D    39967624  1988 EDU0101     ERROR   \n 3 UNITED STATES 00000 EDU010189D    40317775  1989 EDU0101     ERROR   \n 4 UNITED STATES 00000 EDU010190D    40737600  1990 EDU0101     ERROR   \n 5 UNITED STATES 00000 EDU010191D    41385442  1991 EDU0101     ERROR   \n 6 UNITED STATES 00000 EDU010192D    42088151  1992 EDU0101     ERROR   \n 7 UNITED STATES 00000 EDU010193D    42724710  1993 EDU0101     ERROR   \n 8 UNITED STATES 00000 EDU010194D    43369917  1994 EDU0101     ERROR   \n 9 UNITED STATES 00000 EDU010195D    43993459  1995 EDU0101     ERROR   \n10 UNITED STATES 00000 EDU010196D    44715737  1996 EDU0101     ERROR   \n# ℹ 520 more rows\n\nview(noncounty_data)"
  },
  {
    "objectID": "ST558Proj1.html#data-set-edu01a",
    "href": "ST558Proj1.html#data-set-edu01a",
    "title": "ST558 Project 1",
    "section": "",
    "text": "We begin with data set EDU01a, which contains measurements from different areas of the country taken across different years. In the steps below, we create code to organize the data into a usable form.\n\n\nBefore we, we load relevant packages and read in the csv file storing the data.\n\n\nWarning: package 'tidyverse' was built under R version 4.2.3\n\n\nWarning: package 'ggplot2' was built under R version 4.2.3\n\n\nWarning: package 'tibble' was built under R version 4.2.3\n\n\nWarning: package 'tidyr' was built under R version 4.2.3\n\n\nWarning: package 'readr' was built under R version 4.2.3\n\n\nWarning: package 'purrr' was built under R version 4.2.3\n\n\nWarning: package 'dplyr' was built under R version 4.2.3\n\n\nWarning: package 'stringr' was built under R version 4.2.3\n\n\nWarning: package 'forcats' was built under R version 4.2.3\n\n\nWarning: package 'lubridate' was built under R version 4.2.3\n\n\n\nlibrary(tidyverse)\nlibrary(readr)\ncensus_1a_original &lt;- read_csv(\"https://www4.stat.ncsu.edu/~online/datasets/EDU01a.csv\")\n\nRows: 3198 Columns: 42\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (22): Area_name, STCOU, EDU010187N1, EDU010187N2, EDU010188N1, EDU010188...\ndbl (20): EDU010187F, EDU010187D, EDU010188F, EDU010188D, EDU010189F, EDU010...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nhead(census_1a_original)\n\n# A tibble: 6 × 42\n  Area_name     STCOU EDU010187F EDU010187D EDU010187N1 EDU010187N2 EDU010188F\n  &lt;chr&gt;         &lt;chr&gt;      &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;            &lt;dbl&gt;\n1 UNITED STATES 00000          0   40024299 0000        0000                 0\n2 ALABAMA       01000          0     733735 0000        0000                 0\n3 Autauga, AL   01001          0       6829 0000        0000                 0\n4 Baldwin, AL   01003          0      16417 0000        0000                 0\n5 Barbour, AL   01005          0       5071 0000        0000                 0\n6 Bibb, AL      01007          0       3557 0000        0000                 0\n# ℹ 35 more variables: EDU010188D &lt;dbl&gt;, EDU010188N1 &lt;chr&gt;, EDU010188N2 &lt;chr&gt;,\n#   EDU010189F &lt;dbl&gt;, EDU010189D &lt;dbl&gt;, EDU010189N1 &lt;chr&gt;, EDU010189N2 &lt;chr&gt;,\n#   EDU010190F &lt;dbl&gt;, EDU010190D &lt;dbl&gt;, EDU010190N1 &lt;chr&gt;, EDU010190N2 &lt;chr&gt;,\n#   EDU010191F &lt;dbl&gt;, EDU010191D &lt;dbl&gt;, EDU010191N1 &lt;chr&gt;, EDU010191N2 &lt;chr&gt;,\n#   EDU010192F &lt;dbl&gt;, EDU010192D &lt;dbl&gt;, EDU010192N1 &lt;chr&gt;, EDU010192N2 &lt;chr&gt;,\n#   EDU010193F &lt;dbl&gt;, EDU010193D &lt;dbl&gt;, EDU010193N1 &lt;chr&gt;, EDU010193N2 &lt;chr&gt;,\n#   EDU010194F &lt;dbl&gt;, EDU010194D &lt;dbl&gt;, EDU010194N1 &lt;chr&gt;, EDU010194N2 &lt;chr&gt;, …\n\n#view(census_1a_original)\n\n\n\n\nIn the next two steps, we select a subset of columns we would like to work with, and then restructure the data from wide to long format, so that repeated measurements of the same area are contained in additional rows.\n\ncensus_1a_condensed &lt;- census_1a_original |&gt;\n  select(Area_name, STCOU, ends_with(\"D\")) |&gt;\n  rename(area_name = Area_name) |&gt;\n  pivot_longer(cols = 3:12, \n               names_to = \"item_id\", \n               values_to = \"measurement\")\nhead(census_1a_condensed) \n\n# A tibble: 6 × 4\n  area_name     STCOU item_id    measurement\n  &lt;chr&gt;         &lt;chr&gt; &lt;chr&gt;            &lt;dbl&gt;\n1 UNITED STATES 00000 EDU010187D    40024299\n2 UNITED STATES 00000 EDU010188D    39967624\n3 UNITED STATES 00000 EDU010189D    40317775\n4 UNITED STATES 00000 EDU010190D    40737600\n5 UNITED STATES 00000 EDU010191D    41385442\n6 UNITED STATES 00000 EDU010192D    42088151\n\n#view(census_1a_condensed)\n\n\n\n\nNext, we parse the character strings stored in the item_id column to extract the year of measurement and survey code, storing these as new variables.\n\ncensus_1a_add &lt;- census_1a_condensed |&gt;\n  mutate(year = (as.numeric(substr(item_id, 8, 9)) + 1900),\n         survey_code = substr(item_id, 1, 7))\ncensus_1a_add\n\n# A tibble: 31,980 × 6\n   area_name     STCOU item_id    measurement  year survey_code\n   &lt;chr&gt;         &lt;chr&gt; &lt;chr&gt;            &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;      \n 1 UNITED STATES 00000 EDU010187D    40024299  1987 EDU0101    \n 2 UNITED STATES 00000 EDU010188D    39967624  1988 EDU0101    \n 3 UNITED STATES 00000 EDU010189D    40317775  1989 EDU0101    \n 4 UNITED STATES 00000 EDU010190D    40737600  1990 EDU0101    \n 5 UNITED STATES 00000 EDU010191D    41385442  1991 EDU0101    \n 6 UNITED STATES 00000 EDU010192D    42088151  1992 EDU0101    \n 7 UNITED STATES 00000 EDU010193D    42724710  1993 EDU0101    \n 8 UNITED STATES 00000 EDU010194D    43369917  1994 EDU0101    \n 9 UNITED STATES 00000 EDU010195D    43993459  1995 EDU0101    \n10 UNITED STATES 00000 EDU010196D    44715737  1996 EDU0101    \n# ℹ 31,970 more rows\n\n\n\n\n\nIn this step, we separate the observations into two separate datasets based on the presence or absence of a character string pattern in the area_name variable, which is indicative of county level or non-county level data, respectively. From here, we also assign a “county” or “noncounty” class to each new dataset.\n\ncounty_data &lt;- census_1a_add |&gt;\n  filter(grepl(pattern = \", \\\\w\\\\w\", area_name))\n\nnoncounty_data &lt;- census_1a_add |&gt;\n  filter(!grepl(pattern = \", \\\\w\\\\w\", area_name))\n\nclass(county_data) &lt;- c(\"county\", class(county_data))\nclass(noncounty_data) &lt;- c(\"state\", class(noncounty_data))\n\nhead(county_data)\n\n# A tibble: 6 × 6\n  area_name   STCOU item_id    measurement  year survey_code\n  &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;            &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;      \n1 Autauga, AL 01001 EDU010187D        6829  1987 EDU0101    \n2 Autauga, AL 01001 EDU010188D        6900  1988 EDU0101    \n3 Autauga, AL 01001 EDU010189D        6920  1989 EDU0101    \n4 Autauga, AL 01001 EDU010190D        6847  1990 EDU0101    \n5 Autauga, AL 01001 EDU010191D        7008  1991 EDU0101    \n6 Autauga, AL 01001 EDU010192D        7137  1992 EDU0101    \n\nhead(noncounty_data)\n\n# A tibble: 6 × 6\n  area_name     STCOU item_id    measurement  year survey_code\n  &lt;chr&gt;         &lt;chr&gt; &lt;chr&gt;            &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;      \n1 UNITED STATES 00000 EDU010187D    40024299  1987 EDU0101    \n2 UNITED STATES 00000 EDU010188D    39967624  1988 EDU0101    \n3 UNITED STATES 00000 EDU010189D    40317775  1989 EDU0101    \n4 UNITED STATES 00000 EDU010190D    40737600  1990 EDU0101    \n5 UNITED STATES 00000 EDU010191D    41385442  1991 EDU0101    \n6 UNITED STATES 00000 EDU010192D    42088151  1992 EDU0101    \n\n\n\n\n\nWithin the county dataset, we now extract the last two characters of the area_name variable, indicating which state the county is located in, and we store this in a new “state” variable.\n\ncounty_data &lt;- county_data |&gt;\n  mutate(state = substr(area_name, nchar(area_name)-1,\n                        nchar(area_name)))\n\n\n\n\nFor the non-county dataset, we use a series of ifelse statements to indicate the set of states belonging to each U.S. division, creating a new “division” variable to store this information. When the area in question is not a state (e.g., UNITED STATES), this will return “ERROR”.\n\nnoncounty_data &lt;- noncounty_data |&gt;\n  mutate(division = ifelse(area_name %in% c(\n    \"CONNECTICUT\", \"MAINE\", \"MASSACHUSETTS\", \"NEW HAMPSHIRE\", \n    \"RHODE ISLAND\", \"VERMONT\"), \"New England\",\n    ifelse(area_name %in% c(\n      \"NEW JERSEY\", \"NEW YORK\", \"PENNSYLVANIA\"), \n      \"Middle Atlantic\", \n      ifelse(area_name %in% c(\n        \"ILLINOIS\", \"INDIANA\", \"MICHIGAN\", \"OHIO\", \"WISCONSIN\"),\n        \"East North Central\", \n        ifelse(area_name %in% c(\n          \"IOWA\", \"KANSAS\", \"MINNESOTA\", \"MISSOURI\", \"NEBRASKA\",\n          \"NORTH DAKOTA\", \"SOUTH DAKOTA\"), \"West North Central\",\n          ifelse(area_name %in% c(\n            \"DELAWARE\", \"FLORIDA\", \"GEORGIA\", \"MARYLAND\", \n            \"NORTH CAROLINA\", \"SOUTH CAROLINA\", \"VIRGINIA\",\n            \"DISTRICT OF COLUMBIA\", \"District of Columbia\", \n            \"WEST VIRGINIA\"), \"South Atlantic\",\n            ifelse(area_name %in% c(\n              \"ALABAMA\", \"KENTUCKY\", \"MISSISSIPPI\", \"TENNESSEE\"),\n              \"East South Central\",\n              ifelse(area_name %in% c(\n                \"ARKANSAS\", \"LOUISIANA\", \"OKLAHOMA\", \"TEXAS\"),\n                \"West South Central\",\n                ifelse(area_name %in% c(\n                  \"ARIZONA\", \"COLORADO\", \"IDAHO\", \"MONTANA\",\n                  \"NEVADA\", \"NEW MEXICO\", \"UTAH\", \"WYOMING\"),\n                  \"Mountain\",\n                  ifelse(area_name %in% c(\n                    \"ALASKA\", \"CALIFORNIA\", \"HAWAII\", \"OREGON\",\n                    \"WASHINGTON\"), \"Pacific\", \n                  \"ERROR\"))))))))))\nnoncounty_data\n\n# A tibble: 530 × 7\n   area_name     STCOU item_id    measurement  year survey_code division\n   &lt;chr&gt;         &lt;chr&gt; &lt;chr&gt;            &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;   \n 1 UNITED STATES 00000 EDU010187D    40024299  1987 EDU0101     ERROR   \n 2 UNITED STATES 00000 EDU010188D    39967624  1988 EDU0101     ERROR   \n 3 UNITED STATES 00000 EDU010189D    40317775  1989 EDU0101     ERROR   \n 4 UNITED STATES 00000 EDU010190D    40737600  1990 EDU0101     ERROR   \n 5 UNITED STATES 00000 EDU010191D    41385442  1991 EDU0101     ERROR   \n 6 UNITED STATES 00000 EDU010192D    42088151  1992 EDU0101     ERROR   \n 7 UNITED STATES 00000 EDU010193D    42724710  1993 EDU0101     ERROR   \n 8 UNITED STATES 00000 EDU010194D    43369917  1994 EDU0101     ERROR   \n 9 UNITED STATES 00000 EDU010195D    43993459  1995 EDU0101     ERROR   \n10 UNITED STATES 00000 EDU010196D    44715737  1996 EDU0101     ERROR   \n# ℹ 520 more rows\n\nview(noncounty_data)"
  },
  {
    "objectID": "ST558Proj1.html#data-set-edu01b",
    "href": "ST558Proj1.html#data-set-edu01b",
    "title": "ST558 Project 1",
    "section": "Data Set EDU01b",
    "text": "Data Set EDU01b\nWe now turn to a second data set EDU01b, which contains data structured similarly to EDU01a, with measurements from areas of the country taken across different years. In the steps below, we will recreate the steps above for this new data, but rather than simply copying code and modifying to apply to this one new data set, we will create functions that can apply the same set of steps to any similar data set.\n\nImport the data\nTo begin, we import the new data set we will be working with.\n\ncensus_1b_original &lt;- read_csv(\"https://www4.stat.ncsu.edu/~online/datasets/EDU01b.csv\")\n\nRows: 3198 Columns: 42\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (22): Area_name, STCOU, EDU010197N1, EDU010197N2, EDU010198N1, EDU010198...\ndbl (20): EDU010197F, EDU010197D, EDU010198F, EDU010198D, EDU010199F, EDU010...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nhead(census_1b_original)\n\n# A tibble: 6 × 42\n  Area_name     STCOU EDU010197F EDU010197D EDU010197N1 EDU010197N2 EDU010198F\n  &lt;chr&gt;         &lt;chr&gt;      &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;            &lt;dbl&gt;\n1 UNITED STATES 00000          0   44534459 0000        0000                 0\n2 ALABAMA       01000          0     737386 0000        0000                 0\n3 Autauga, AL   01001          0       8099 0000        0000                 0\n4 Baldwin, AL   01003          0      21410 0000        0000                 0\n5 Barbour, AL   01005          0       5100 0000        0000                 0\n6 Bibb, AL      01007          0       3717 0000        0000                 0\n# ℹ 35 more variables: EDU010198D &lt;dbl&gt;, EDU010198N1 &lt;chr&gt;, EDU010198N2 &lt;chr&gt;,\n#   EDU010199F &lt;dbl&gt;, EDU010199D &lt;dbl&gt;, EDU010199N1 &lt;chr&gt;, EDU010199N2 &lt;chr&gt;,\n#   EDU010200F &lt;dbl&gt;, EDU010200D &lt;dbl&gt;, EDU010200N1 &lt;chr&gt;, EDU010200N2 &lt;chr&gt;,\n#   EDU010201F &lt;dbl&gt;, EDU010201D &lt;dbl&gt;, EDU010201N1 &lt;chr&gt;, EDU010201N2 &lt;chr&gt;,\n#   EDU010202F &lt;dbl&gt;, EDU010202D &lt;dbl&gt;, EDU010202N1 &lt;chr&gt;, EDU010202N2 &lt;chr&gt;,\n#   EDU015203F &lt;dbl&gt;, EDU015203D &lt;dbl&gt;, EDU015203N1 &lt;chr&gt;, EDU015203N2 &lt;chr&gt;,\n#   EDU015204F &lt;dbl&gt;, EDU015204D &lt;dbl&gt;, EDU015204N1 &lt;chr&gt;, EDU015204N2 &lt;chr&gt;, …\n\n\n\n\nFunction for steps 1 and 2\nBelow we create a function called process_data1, which takes in the raw census data set, selects designated columns, and pivots to long format. Arguments for the function are the name of the raw data tibble and, optionally, the desired name of the column to store the measurement for each observation (default = “measurement”).\n\nprocess_data1 &lt;- function(tibble_df, default_var_name = \"measurement\") {\n  tibble_df |&gt;\n    select(Area_name, STCOU, ends_with(\"D\")) |&gt;\n    rename(area_name = Area_name) |&gt;\n    pivot_longer(cols = 3:12, \n                 names_to = \"item_id\", \n                 values_to = default_var_name)\n}\n#test function\nresult_step_1_2 &lt;- process_data1(census_1b_original)\nresult_step_1_2\n\n# A tibble: 31,980 × 4\n   area_name     STCOU item_id    measurement\n   &lt;chr&gt;         &lt;chr&gt; &lt;chr&gt;            &lt;dbl&gt;\n 1 UNITED STATES 00000 EDU010197D    44534459\n 2 UNITED STATES 00000 EDU010198D    46245814\n 3 UNITED STATES 00000 EDU010199D    46368903\n 4 UNITED STATES 00000 EDU010200D    46818690\n 5 UNITED STATES 00000 EDU010201D    47127066\n 6 UNITED STATES 00000 EDU010202D    47606570\n 7 UNITED STATES 00000 EDU015203D    48506317\n 8 UNITED STATES 00000 EDU015204D    48693287\n 9 UNITED STATES 00000 EDU015205D    48978555\n10 UNITED STATES 00000 EDU015206D    49140702\n# ℹ 31,970 more rows\n\n\n\n\nFunction for step 3\nHere, we create a second function, process_data2, which performs step 3 from above to create year and survey code variables. The only argument is the name of the modified census tibble output from the previous step.\n\nprocess_data2 &lt;- function(tibble_df) {\n  tibble_df |&gt;\n    mutate(year = (as.numeric(substr(item_id, 8, 9)) + 1900),\n           survey_code = substr(item_id, 1, 7))\n}\nresult_step_3 &lt;- process_data2(result_step_1_2)\nresult_step_3\n\n# A tibble: 31,980 × 6\n   area_name     STCOU item_id    measurement  year survey_code\n   &lt;chr&gt;         &lt;chr&gt; &lt;chr&gt;            &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;      \n 1 UNITED STATES 00000 EDU010197D    44534459  1997 EDU0101    \n 2 UNITED STATES 00000 EDU010198D    46245814  1998 EDU0101    \n 3 UNITED STATES 00000 EDU010199D    46368903  1999 EDU0101    \n 4 UNITED STATES 00000 EDU010200D    46818690  1900 EDU0102    \n 5 UNITED STATES 00000 EDU010201D    47127066  1901 EDU0102    \n 6 UNITED STATES 00000 EDU010202D    47606570  1902 EDU0102    \n 7 UNITED STATES 00000 EDU015203D    48506317  1903 EDU0152    \n 8 UNITED STATES 00000 EDU015204D    48693287  1904 EDU0152    \n 9 UNITED STATES 00000 EDU015205D    48978555  1905 EDU0152    \n10 UNITED STATES 00000 EDU015206D    49140702  1906 EDU0152    \n# ℹ 31,970 more rows\n\n\n\n#Maggie's attempt to convert 00 codes and above to 2000+ (assuming that's what they mean). May not work, didn't want to mess up original code. Using 0 as a test to see if there are years that get missed, but didn't actually check this yet.  \n\nprocess_data2 &lt;- function(census_df2=result_step_1_2) {\n  census_df2 |&gt;\n    mutate(year = ifelse(substr(item_id, 7, 7)==\"1\", \n     (as.numeric(substr(item_id, 8, 9)) + 1900), \n     ifelse(substr(item_id, 7, 7)==\"2\", \n       (as.numeric(substr(item_id, 8, 9)) + 2000), 0)), \n      survey_code = substr(item_id, 1, 7))\n}\n\n\n\nFunction for step 5\nNext, we create a function to perform step 5, which will taken the output from the previous step, extract the last two characters of the area_name variable and stores this in a new “state” variable. Again, the only argument is the name of the census data tibble output from the previous step.\n\nadd_state &lt;- function(census_df) {\n  census_df |&gt;\n    mutate(state = substr(area_name, nchar(area_name)-1,\n                        nchar(area_name)))\n}\n\n\n\nFunction for step 6\nNext, we create a function to assign each state to its corresponding division in the United States. Given that the data set has not yet been split between county and non-county data, this function should return “ERROR” for the majority of observations which correspond to county-level data.\n\nadd_division &lt;- function(census_df) {\n  census_df |&gt;\n    mutate(division = ifelse(area_name %in% c(\n      \"CONNECTICUT\", \"MAINE\", \"MASSACHUSETTS\", \"NEW HAMPSHIRE\", \n      \"RHODE ISLAND\", \"VERMONT\"), \"New England\",\n      ifelse(area_name %in% c(\n        \"NEW JERSEY\", \"NEW YORK\", \"PENNSYLVANIA\"),\n        \"Middle Atlantic\",\n        ifelse(area_name %in% c(\n          \"ILLINOIS\", \"INDIANA\", \"MICHIGAN\", \"OHIO\", \"WISCONSIN\"),\n          \"East North Central\",\n          ifelse(area_name %in% c(\n            \"IOWA\", \"KANSAS\", \"MINNESOTA\", \"MISSOURI\", \"NEBRASKA\",\n            \"NORTH DAKOTA\", \"SOUTH DAKOTA\"), \"West North Central\",\n            ifelse(area_name %in% c(\n              \"DELAWARE\", \"FLORIDA\", \"GEORGIA\", \"MARYLAND\", \n              \"NORTH CAROLINA\", \"SOUTH CAROLINA\", \"VIRGINIA\", \n              \"DISTRICT OF COLUMBIA\", \"District of Columbia\", \n              \"WEST VIRGINIA\"), \"South Atlantic\", \n              ifelse(area_name %in% c(\n                \"ALABAMA\", \"KENTUCKY\", \"MISSISSIPPI\",\n                \"TENNESSEE\"), \"East South Central\", \n                ifelse(area_name %in% c(\n                  \"ARKANSAS\", \"LOUISIANA\", \"OKLAHOMA\", \"TEXAS\"),\n                  \"West South Central\",\n                  ifelse(area_name %in% c(\n                    \"ARIZONA\", \"COLORADO\", \"IDAHO\", \"MONTANA\",\n                    \"NEVADA\", \"NEW MEXICO\", \"UTAH\", \"WYOMING\"),\n                    \"Mountain\", \n                    ifelse(area_name %in% c(\n                      \"ALASKA\", \"CALIFORNIA\", \"HAWAII\", \"OREGON\", \n                      \"WASHINGTON\"), \"Pacific\", \"ERROR\"))))))))))\n}\n\n\n\nFunction for step 4\nHere, we create a function that will split the data into two datasets (one for county-level data, and one for non-county data), and then calls the above two functions to add the new variable to each new tibble.\n\nsplit_data &lt;- function(census_df) {\n  county_data &lt;- census_df |&gt;\n    filter(grepl(pattern = \", \\\\w\\\\w\", area_name)) \n  class(county_data) &lt;- c(\"county\", class(county_data)) \n  county_data &lt;- add_state(county_data)\n  \n  noncounty_data &lt;- census_df |&gt;\n    filter(!grepl(pattern = \", \\\\w\\\\w\", area_name)) \n  class(noncounty_data) &lt;- c(\"state\", class(noncounty_data)) \n  add_division(noncounty_data)\n}\n#test function\nsplit_data(result_step_3)\n\n# A tibble: 530 × 7\n   area_name     STCOU item_id    measurement  year survey_code division\n   &lt;chr&gt;         &lt;chr&gt; &lt;chr&gt;            &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;   \n 1 UNITED STATES 00000 EDU010197D    44534459  1997 EDU0101     ERROR   \n 2 UNITED STATES 00000 EDU010198D    46245814  1998 EDU0101     ERROR   \n 3 UNITED STATES 00000 EDU010199D    46368903  1999 EDU0101     ERROR   \n 4 UNITED STATES 00000 EDU010200D    46818690  1900 EDU0102     ERROR   \n 5 UNITED STATES 00000 EDU010201D    47127066  1901 EDU0102     ERROR   \n 6 UNITED STATES 00000 EDU010202D    47606570  1902 EDU0102     ERROR   \n 7 UNITED STATES 00000 EDU015203D    48506317  1903 EDU0152     ERROR   \n 8 UNITED STATES 00000 EDU015204D    48693287  1904 EDU0152     ERROR   \n 9 UNITED STATES 00000 EDU015205D    48978555  1905 EDU0152     ERROR   \n10 UNITED STATES 00000 EDU015206D    49140702  1906 EDU0152     ERROR   \n# ℹ 520 more rows"
  },
  {
    "objectID": "ST558Proj1.html#final-data-processing-wrapper-function",
    "href": "ST558Proj1.html#final-data-processing-wrapper-function",
    "title": "ST558 Project 1",
    "section": "Final data processing wrapper function",
    "text": "Final data processing wrapper function\n\ndata_processing_wrapper &lt;- function(url, default_var_name = \"measurement\") {\n  result &lt;- read_csv(url) |&gt;\n    process_data1() |&gt;\n    process_data2()\n  return(result)\n}\ndata_processing_wrapper(\"https://www4.stat.ncsu.edu/~online/datasets/EDU01b.csv\")\n\nRows: 3198 Columns: 42\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (22): Area_name, STCOU, EDU010197N1, EDU010197N2, EDU010198N1, EDU010198...\ndbl (20): EDU010197F, EDU010197D, EDU010198F, EDU010198D, EDU010199F, EDU010...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n# A tibble: 31,980 × 6\n   area_name     STCOU item_id    measurement  year survey_code\n   &lt;chr&gt;         &lt;chr&gt; &lt;chr&gt;            &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;      \n 1 UNITED STATES 00000 EDU010197D    44534459  1997 EDU0101    \n 2 UNITED STATES 00000 EDU010198D    46245814  1998 EDU0101    \n 3 UNITED STATES 00000 EDU010199D    46368903  1999 EDU0101    \n 4 UNITED STATES 00000 EDU010200D    46818690  2000 EDU0102    \n 5 UNITED STATES 00000 EDU010201D    47127066  2001 EDU0102    \n 6 UNITED STATES 00000 EDU010202D    47606570  2002 EDU0102    \n 7 UNITED STATES 00000 EDU015203D    48506317  2003 EDU0152    \n 8 UNITED STATES 00000 EDU015204D    48693287  2004 EDU0152    \n 9 UNITED STATES 00000 EDU015205D    48978555  2005 EDU0152    \n10 UNITED STATES 00000 EDU015206D    49140702  2006 EDU0152    \n# ℹ 31,970 more rows"
  }
]